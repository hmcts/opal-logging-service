server:
  port: 4065
  shutdown: "graceful"
hmcts:
  common:
    exceptions:
      enable-exception-handler: true
management:
  endpoint:
    health:
      show-details: "always"
      group:
        readiness:
          include: "db"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.opal.logging.controllers
  writer-with-order-by-keys: true

spring:
  config:
    import: "optional:configtree:/mnt/secrets/opal/"
  application:
    name: Opal Logging Service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${OPAL_LOGGING_DB_HOST:localhost}:${OPAL_LOGGING_DB_PORT:5432}/${OPAL_LOGGING_DB_NAME:opal-logging-db}${OPAL_LOGGING_DB_OPTIONS:}
    username: ${OPAL_LOGGING_DB_USERNAME:opal-logging}
    password: ${OPAL_LOGGING_DB_PASSWORD:opal-logging}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: OpalLoggingHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true
  flyway:
    locations: ${FLYWAY_LOCATIONS:classpath:db/migration/allEnvs, classpath:db/migration/devOnly, classpath:db/migration/stgOnly}
    baseline-on-migrate: true
    ignoreMigrationPatterns: "*:missing"

azure:
  application-insights:
    instrumentation-key: ${opal.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}
